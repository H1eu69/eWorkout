Index: app/src/main/java/com/example/eworkout/training/adapter/set_recycler_adapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eworkout.training.adapter\r\n\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.bumptech.glide.load.resource.bitmap.RoundedCorners\r\nimport com.example.eworkout.R\r\nimport com.example.eworkout.databinding.FragmentSetsItemBinding\r\nimport com.example.eworkout.training.listener.SetOnClickListener\r\nimport com.example.eworkout.training.model.Set\r\nimport kotlinx.coroutines.NonDisposableHandle\r\nimport kotlinx.coroutines.NonDisposableHandle.parent\r\n\r\nclass set_recycler_adapter(val list: List<Set>,val listener: SetOnClickListener): RecyclerView.Adapter<set_recycler_adapter.ViewHolder>() {\r\n\r\n    inner class ViewHolder(val binding: FragmentSetsItemBinding) :\r\n        RecyclerView.ViewHolder(binding.root) {\r\n        fun bind(set: Set) {\r\n            set.apply {\r\n                val bundle = Bundle().apply {\r\n                    putString(\"set_id\", setId)\r\n                }\r\n                binding.textViewSetName.text = setName\r\n                binding.textViewTotalExercises.text = totalExercises\r\n                binding.texViewTotalTime.text = totalTime\r\n                binding.buttonViewDetail.setOnClickListener {\r\n                    listener.onClick(bundle)\r\n                }\r\n                if(setImage != \"\"){\r\n                    val radius = binding.root.context.resources.getDimensionPixelSize(R.dimen.corner_radius)\r\n                    Glide.with(binding.root.context).load(setImage)\r\n                        .transform(RoundedCorners(radius))\r\n                        .centerCrop()\r\n                        .into(binding.SetImageView)\r\n                }\r\n\r\n            }\r\n            }\r\n        }\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            val binding =\r\n                FragmentSetsItemBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n            return ViewHolder(binding)\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n            val currentset = list[position]\r\n            holder.bind(currentset)\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return list.size\r\n        }\r\n\r\n\r\n        /*val list: List<Exercise>,\r\n    val listener: ExercisesOnClickListener) : RecyclerView.Adapter<ExercisesAdapter.ViewHolder>() {\r\n\r\n    inner class ViewHolder(val binding: ExerciseRecyclerviewItemBinding) : RecyclerView.ViewHolder(binding.root)\r\n    {\r\n        fun bind(exercise: Exercise)\r\n        {\r\n            exercise.apply {\r\n                val bundle = Bundle().apply {\r\n                    putString(\"exercise_id\", id)\r\n                }\r\n                binding.exerciseNameTextview.text = name\r\n                binding.exerciseRepTextview.text = reps\r\n                binding.exerciseInformationBtn.setOnClickListener {\r\n                    listener.onClick(bundle)\r\n                }\r\n                if(image != \"\"){\r\n                    val radius = binding.root.context.resources.getDimensionPixelSize(R.dimen.corner_radius)\r\n                    Glide.with(binding.root.context).load(image)\r\n                        .transform(RoundedCorners(radius))\r\n                        .centerCrop()\r\n                        .into(binding.shapeableImageView)\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n        val binding = ExerciseRecyclerviewItemBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n        return ViewHolder(binding)\r\n    }\r\n\r\n    override fun getItemCount() = list.size\r\n\r\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n        val exercise = list[position]\r\n        holder.bind(exercise)\r\n    }*/\r\n\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/eworkout/training/adapter/set_recycler_adapter.kt b/app/src/main/java/com/example/eworkout/training/adapter/set_recycler_adapter.kt
--- a/app/src/main/java/com/example/eworkout/training/adapter/set_recycler_adapter.kt	
+++ b/app/src/main/java/com/example/eworkout/training/adapter/set_recycler_adapter.kt	
@@ -32,9 +32,7 @@
                     listener.onClick(bundle)
                 }
                 if(setImage != ""){
-                    val radius = binding.root.context.resources.getDimensionPixelSize(R.dimen.corner_radius)
                     Glide.with(binding.root.context).load(setImage)
-                        .transform(RoundedCorners(radius))
                         .centerCrop()
                         .into(binding.SetImageView)
                 }
